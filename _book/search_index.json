[["index.html", "R Ders Notları Bölüm1 Ön Bilgi 1.1 Hakkımda", " R Ders Notları Dr. Busenur Kızılaslan 2020-10-13 Bölüm1 Ön Bilgi R ders notları temelde BSP2043 - Bilgisayar III ve BSP2044 - Bilgisayar IV derslerine kaynaklık etmesi amacıyla tasarlanmış olup konu çerçevesinde kendisini geliştirmek isteyen herkesin faydalanabilmesi hedeflenmiştir. Kaynak, temel matematik ve ingilizce bilgisine sahip olan herkesin anlayıp uygulayabileceği basitlikte bir anlatıma sahiptir. Ders dili Türkçe’dir. Bu bakımdan genel anlatımda Türkçe kullanılacaktır. Literatürü rahat takip edebilmeniz, komut karmaşası yaşamamanız ve araştırma sürecinde zengin forum imkanından yararlanabilmeniz adına temel terimler orijinal haliyle kullanılacaktır. Aynı zamanda referans verilen kaynaklar da orijinal dili ile paylaşılacaktır. Bu nedenle İngilizce eksikliğinizi gidermeniz önerilir. Kaynaklar; Kitaplar The R Book - Michael J. Crawley R for Data Science - Hadley Wickham, Garrett Grolemund Introduction to Data Science - Rafael A. Irizarry R Programming for Data Science - Roger D. Peng The Book of R - Tilman M. Davies Eğitimler HarvardX - Data Science: R Basics HarvardX - Data Science: Visualization HarvardX - Data Science: Probability Katkı ve öneriler için: busenur.sarica@marmara.edu.tr İyi eğlenceler! 1.1 Hakkımda 2012 yılında Mimar Sinan G. S. Üniversitesi istatistik bölümünde lisans öğrenimimi tamamlamamın ardından 2014 yılı itibariyle Marmara Üniversitesi istatistik bölümünde araştırma görevlisi olarak göreve başladım. Eş zamanlı olarak başladığım yüksek lisans öğrenimimi yine Mimar Sinan G. S. Üniversitesi istatistik anabilim dalında tamamlarken artık çalışma alanım bulanık mantık (fuzzy logic) olarak şekillenmişti. Bir buçuk yılda tamamladığım yüksek lisansın ardından farklı bakış açısı kazanma fikriyle yönümü Yıldız Teknik Üniversitesi’ne çevirdim. 2015 yılında istatistik bölümünde başladığım doktora öğrenimimi 2020 yılında yine bulanık mantık ile öngörü üzerine hazırladığım tezim ile tamamladım. Doktora öğrenimim sırasında İstanbul Teknik Üniversitesi endüstri mühendisliği bölümünden de çeşitli dersler alarak alanında uzman hocaların1 bilgilerinden faydalanma imkanı buldum. Akademik kariyer hedefiyle başlamadığım öğrenim yaşamımda ufku açık, aydınlık ve birikimli hocalarım yolumu bulmama yardımcı olmuştur. 2018 yılında Polonya’da gerçekleşen International Conference on Trends and Perspectives in Linear Statistical Inference (LinStat’2018) kapsamında sunduğum, doktora tezimin bir kısmından oluşan çalışma ile aldığım Young Scientists Awards ikincilik ödülü de yanlış yolda olmadığımı göstermiştir. Üzerimde emeği olan herkese teşekkürlerimle! CV, Google Scholar, Linkedin Prof. Dr. Cengiz Kahraman↩︎ "],["motivasyon.html", "Bölüm2 Motivasyon", " Bölüm2 Motivasyon ‘Bu dersi neden alıyorum?’ sorusuna karşılık olarak alacağınız cevap ‘ilerleyen dönemlerde göreceğiniz derslerin uygulamalarında ihtiyaç duyacaksınız’dan çok daha fazlası! Herhangi bir programlama diline hakim olmak veriyi anlamlandırabilmek adına zaten önemliyken özellikle R, Python gibi açık kaynak ve hızla gelişmeye devam eden programlama dillerini biliyor olmak sizleri donanımlı kılacaktır. Programlama bilgisine sahip olmak iş yaşamındaki ihtiyacınızı karşılamasının yanı sıra günlük yaşamdaki problem çözme yeteneğinizin gelişmesine de yardımcı olmaktadır. Programlama yapısını öğrenen kişinin diğer programlama dillerini öğrenmesi kolaylaşmaktadır. İş başvurularında birden fazla programlama dili biliyor olmanın sizi öne çıkaracağı da aşikar. Burada sorulması gereken asıl soru ‘hangi programlama dilini/dillerini öğrenmeliyim?’ olmalıdır. Ders kapsamında R programlama dili ve özellikleri açıklanacaktır. "],["genel-bakış.html", "Bölüm3 Genel Bakış 3.1 R: Nedir? 3.2 R: Neden? 3.3 R: Help 3.4 Paketler", " Bölüm3 Genel Bakış 3.1 R: Nedir? İstatistiksel analiz ve veri görselleştirme amacıyla geliştirilen R, açık kaynak olup ücretsizdir. R, dizayn olarak var olan iki dilden etkilenmiştir; Becker, Chambers &amp; Wilks’in S programlama dili ve Sussman’ın Scheme programlama dilidir. R, başlangıçta Yeni Zelanda Auckland’daki Auckland Üniversitesi İstatistik Bölümü’nde Ross Ihaka ve Robert Gentleman tarafından yazılmıştır. Ek olarak, büyük bir grup insan, kod ve hata raporları göndererek katkıda bulunmuştur. Tarihçeyi merak edenler A Brief History of S (Becker 2004) kaynağını inceleyebilir. 1997 ortalarından itibaren çekirdek bir yapı (The R Core Team) yönetimi sürdürmektedir. Resmi internet adresi Yükleme adresi The R Journal: R kullanıcıları için hakemli ve açık erişimli dergi Kitaplar: R kullancıları için çeşitli alanlarda/dillerde kaynak kitaplar Faydalı adres1 Faydalı adres2 Hangi komutun ne işe yaradığını anımsayamıyorsanız veya bir hata ile karşılaştıysanız GOOGLE kullanın. Programlama öğrenmenin en iyi yolu denemek ve hata yapmaktır. 3.1.1 RStudio R üzerinde doğrudan çalışabilir veya bir grafik ara yüzü olan RStudio’nun zengin özelliklerinden faydalanma imkanından yararlanabilirsiniz. Uygulama kolaylığı sağlayan bir entegre geliştirme ortamı (integrated development environment (IDE)) olan RStudio, Windows, Mac ve Linux ile çalışabilir. RStudio’yu kullanışlı kılan birçok özellik mevcuttur, bunlardan birkaçı şu şekilde sıralanabilir. Script Kodlama geçmişi, güçlü grafiksel altyapı Cheatsheetler Değişken ve fonksiyon tamamlama özelliği 3.2 R: Neden? Veri analizi için kullanılabilecek SAS, SPSS, Excel, MATLAB gibi birçok yazılım mevcutken neden R kullanıyoruz? Ücretsiz (open source) Geniş kullanım kitlesi Dünyada 2 milyondan fazla kullanıcıya sahip Sürekli gelişmeye devam eden yapısı Geniş forum ağı Uygulama ve kullanım kolaylığı Grafik ve görsel üretimindeki başarısı Paket kullanım imkanı Raporlama kolaylığı ve RMarkdown sayesinde kolay sunum R aynı zamanda bazı dezavantajlara da sahiptir. Güncelleneme gereksinimi Uzmanlaşmanın diğer programlara göre biraz daha zor olması 3.3 R: Help R’da karşılacağınız problemler için menüde yer alan Help kısmını kullanabilir veya Stackoverflow gibi forumlardan faydalanabilirsiniz. Windows, Mac işletim sistemleri ve genel sorular için üç farklı FAQ (Frequently Asked Questions) kısmı mevcuttur. Kullanacağınız fonksiyonun ismini biliyorsanız ? kullanarak yine help içeriğinden faydalanabilirsiniz. ?sum Kullanacağınız fonksiyonun ismini biliyor fakat hangi pakette yer aldığını bilmiyorsanız bu noktada find komutu size yardımcı olacaktır. find(&quot;sum&quot;) ## [1] &quot;package:base&quot; Kullanacağınız fonksiyon ile ilgili örnek araştırmak isterseniz example komutu işinizi görecektir. example(sum) ## ## sum&gt; ## Pass a vector to sum, and it will add the elements together. ## sum&gt; sum(1:5) ## [1] 15 ## ## sum&gt; ## Pass several numbers to sum, and it also adds the elements. ## sum&gt; sum(1, 2, 3, 4, 5) ## [1] 15 ## ## sum&gt; ## In fact, you can pass vectors into several arguments, and everything gets added. ## sum&gt; sum(1:2, 3:5) ## [1] 15 ## ## sum&gt; ## If there are missing values, the sum is unknown, i.e., also missing, .... ## sum&gt; sum(1:5, NA) ## [1] NA ## ## sum&gt; ## ... unless we exclude missing values explicitly: ## sum&gt; sum(1:5, NA, na.rm = TRUE) ## [1] 15 3.4 Paketler R programlama dili ile kendi döngülerinizi oluşturabilir, özgün kodlarınızı yazabilirsiniz, aynı zamanda paketler yardımı ile yazılmış olan zengin hazır kod içeriğinden de faydalanabilirsiniz. Bu zengin içeriğe hazırladığınız paketler ile dahil olma imkanınız da mevcut. Paket indirme konusunda problem yaşıyorsanız R&#39;ı yönetici olarak çalıştırmayı deneyin. Paket yükleme işleminin hızlı olabilmesi için size en yakın mirror seçimini yapmalısınız. Paketler kullanım kolaylığı ve zamandan kazanç sağlamakla birlikte kullanılmadan önce içeriğin dikkatlice incelenmesi önemlidir. Tanımlamaları iyi anlaşılmadan kullanılan paketlerle yanlış sonuçlar elde edilmesi kaçınılmazdır. Referans "],["yükleme-ve-tanışma.html", "Bölüm4 Yükleme ve Tanışma 4.1 Yükleme 4.2 Tanışma", " Bölüm4 Yükleme ve Tanışma 4.1 Yükleme R’ın güncel versiyonun indirilmesi için CRAN (The Comprehensive R Archive Network) sayfası ziyaret edilmelidir. Bilgisayarınızdaki mevcut işletim sistemi için uygun olan versiyon indirilmelidir. Uygun işletim sistemi seçildikten sonra install R for the first time tıklanarak temel versiyon seçilmelidir. Gelen ekranda seçtiğiniz işletim sistemine uygun olan güncel R versiyonu görülecektir. Download işlemi başlatılır ve uygun seçenekler dahilinde indirme işlemi ve kurulum tamamlanır. R yükleme işlemi tamamlandıktan sonra RStudio kurulum işlemine başlanır. RStudio sayfasına gidilir, bilgisayarınızdaki işletim sistemine uygun olan RStudio Desktop versiyonu indirilir ve kurulur. Yükleme destek videosu (R-Windows) Yükleme destek videosu (R-Mac) Yükleme destek videosu (RStudio) 4.2 Tanışma R programlama dilini kullanmak için console erişimi yeterlidir. Console yalın haliyle kullanılabildiği gibi RStudio aracılığı ile de kullanılabilir. RStudio editor, görsel ve uygulama avantajları sayesinde uygulama kolaylığı sağlamaktadır. R kullanarak yaptığınız çalışmalarda lütfen referans vermeyi unutmayınız. citation() ## ## To cite R in publications use: ## ## R Core Team (2020). R: A language and environment for statistical ## computing. R Foundation for Statistical Computing, Vienna, Austria. ## URL https://www.R-project.org/. ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {R: A Language and Environment for Statistical Computing}, ## author = {{R Core Team}}, ## organization = {R Foundation for Statistical Computing}, ## address = {Vienna, Austria}, ## year = {2020}, ## url = {https://www.R-project.org/}, ## } ## ## We have invested a lot of time and effort in creating R, please cite it ## when using it for data analysis. See also &#39;citation(&quot;pkgname&quot;)&#39; for ## citing R packages. Yeni script oluşturmak için; RStudio cheatsheat yapısı sayesinde bir çok konu başlığında özet bilgiye ulaşmak mümkün. "],["temel-nesneler.html", "Bölüm5 Temel Nesneler 5.1 Aritmetik (Arithmetic) 5.2 Nesneleri Tanımlama (Assigning Objects) 5.3 Vektörler (Vectors) 5.4 Matrisler (Matrices) 5.5 Listeler ve Data Frameler (Lists and Data Frames) 5.6 Nümerik Olmayan Değerler (Non-Numeric Values) 5.7 Eksik Gözlemler (Missing Values)", " Bölüm5 Temel Nesneler Bu bölümde kodlama için ihtiyaç duyacağınız temel yapılar açıklanacak ve uygulamalar ile desteklenecektir. Farklı uygulamalar ders esnasında eş zamanlı yapılacağından lütfen online dersleri takip ediniz. 5.1 Aritmetik (Arithmetic) R, en basit haliyle hesap makinesi olarak kullanılabilir. Toplama +, çıkarma -, çarpma *, bölme / operatörleri ile gerçekleştirilir. 5+4 ## [1] 9 Birden fazla matematiksel işlem aynı satırda gerçekleştirilebilir. 3+4; 6*4; 10-2 ## [1] 7 ## [1] 24 ## [1] 8 İşlemler parantez yardımıyla önceliğine göre yazılabilir, yazılmadığı taktirde matematiksel işlem önceliği geçerlidir. 10*2-3 ## [1] 17 İşlem devam edecek biçimde tanımlanırsa console + simgesi ile devam edecek ve işlem tamamlanana kadar yeni işleme geçmenize engel olacaktır. İşlemi tamamlamalı veya yeni işleme geçmek için esc tuşunu kullanmalısınız. 10+20+30+ 40 ## [1] 100 Yapılan işlemler sonucu elde edilen çok büyük veya çok küçük sonuçlar için output exponent olarak verilir. 12000*3000 ## [1] 3.6e+07 1.3e2 (130 anlamına gelir. e2: ondalık noktasını iki basamak sağa taşı) 1.4e-1 (0.14 anlamına gelir. e-1: ondalık noktasını bir basamak sola taşı) Uygulamada elde edilen sonucun integer (tamsayı) olması gerekebilir. Bu noktada elde edilen output üste, alta veya 0.5 üzeri ya da altı olma durumuna göre farklı komutlar yardımı ile yuvarlanabilir. floor: alta yuvarla floor(5.2); floor(5.7) ## [1] 5 ## [1] 5 ceilign: üste yuvarla ceiling(3.2); ceiling(3.8) ## [1] 4 ## [1] 4 round: 0.5 üzeri ise üste, 0.5 altı ise alta yuvarla round(5.6); round(5.3) ## [1] 6 ## [1] 5 Negatif sayılarda komutların nasıl işlediğini inceleyebilirsiniz. round komutu ile virgülden sonra kaç basamak olması gerektiğini belirterek yuvarlama işlemi yapabilirsiniz. round(1.248,2) ## [1] 1.25 Kullanılabilecek matematiksel fonksiyonlara örnek olarak (Crawley 2012) 5.2 Nesneleri Tanımlama (Assigning Objects) Temel işlevlerden bir diğeri kullanılacak değişkenlerin tanımlanmasıdır. Değişken için seçilecek isim mümkün olan en kısa haliyle tanımlanarak kavram kargaşası önlenmelidir. R, büyük ve küçük harfe duyarlıdır, dolayısıyla tanımlanan \\(B\\) ve \\(b\\) iki farklı değişkeni temsil eder. Değişken ismi iki veya daha fazla kelimeden oluşacaksa kelimeler arasında boşluk yerine nokta kullanılmalıdır. (neura link) Değişken ismi sayı veya sembol ile başlayamaz. (1a, &amp;b) Değişken tanımlama işlemi &lt;- operatörü ile gerçekleştirilir. Tanımlanan değişken adı ile çağrılmazsa veya print komutu kullanılmazsa çıktı yazdırılmaz. x&lt;-3 print(x) ## [1] 3 Sayısal olmayan değer tanımlamaları tırnak içerisinde yapılmalıdır. msg&lt;- &quot;hello world&quot; Tanımlanan değişken veya fonksiyon ile ilgili notlar # ile tanımlanır. x.ort&lt;-20 # ortalama değer Çıktıda basılan [.] kaçıncı gözlemden devam edildiğini gösterir. Örneğin 30 gözleminin [26] ifadesinin yardımı ile 26. gözlem olduğunu kolaylıkla söyleyebiliriz. [.] ifadeleri asıl seride yer almaz, yalnızca yol gösterici olarak çıktıda gözlenir. x&lt;-5:50 x ## [1] 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 ## [26] 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 5.3 Vektörler (Vectors) Vektör oluşturmak için c() operatör kullanılmaktadır. Vektörler numeric character logical integer complex yapıları içerebilir. Vektörler yalnızca aynı yapıda gözlemler içerebilir. x &lt;- c(0.5, 0.6) # numeric x &lt;- c(TRUE, FALSE) # logical x &lt;- c(T, F) # logical x &lt;- c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;) # character x &lt;- 9:29 # integer x &lt;- c(1+0i, 2+4i) # complex T ve F, TRUE ve FALSE’a karşılık kullanılan kısaltma yapılardır. x &lt;- c(T, F) # logical x ## [1] TRUE FALSE Aynı zamanda vector komutu ile de vektör oluşturabilirsiniz. Vektörü tanımlarken belirlenen içerik yapısına göre oluşturulur. x &lt;- vector(&quot;numeric&quot;, length = 7) x ## [1] 0 0 0 0 0 0 0 Karakter elemanları içerecek bir vektör oluşturmak istendiğinde; x &lt;- vector(&quot;complex&quot;, length = 7) x ## [1] 0+0i 0+0i 0+0i 0+0i 0+0i 0+0i 0+0i Aynı değişken adı birden fazla tanımlamada kullanılırsa yapılan son tanımlama geçerli olacaktır. Kod yazarken kullandığınız değişken isimlerine ve doğru yazıma dikkat ediniz. Vektör aynı yapıda gözlemlerden oluşmuyorsa? Bu durumda tüm gözlemler tek bir yapı olarak algılanır. Herhangi bir değişkenin hangi yapıda gözlem içerdiği class() komutu ile sorgulanabilir. y &lt;- c(1.7, &quot;a&quot;) # character class(y) ## [1] &quot;character&quot; y &lt;- c(TRUE, 2) # numeric class(y) ## [1] &quot;numeric&quot; y &lt;- c(&quot;a&quot;, TRUE) # character class(y) ## [1] &quot;character&quot; Vektör farklı yapıda gözlemler için verimli kullanılamıyor olabilir ancak bu işlemi gerçekleştirebilen list komutu mevcuttur. İlerleyen başlıklarda bu komut detaylandırılacaktır. Kodlama yaparken sıklıkla kullanılan bir işlem türü de vektör yapısının değiştirilmesidir. Vektör içeriğinin aynı yapıda olması kuralına sadık kalarak tüm vektör içeriği farklı bir yapıya aktarılabilir. Burada as.numeric, as.logical gibi komutlardan faydalanılır. x &lt;- 0:6 class(x) ## [1] &quot;integer&quot; x vektörünün integer yapıda olduğunu gördükten sonra as.character komutu ile yeni x vektörünü numeric olarak tanımlayabiliriz. x&lt;-as.character(x) x; class(x) ## [1] &quot;0&quot; &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; ## [1] &quot;character&quot; Bazı durumlarda R dönüşüm için çözüm üretemez ve NA çıktı verir. x &lt;- c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;) as.numeric(x) ## Warning: NAs introduced by coercion ## [1] NA NA NA 5.4 Matrisler (Matrices) Matrisler, boyut niteliğine sahip vektörlerdir. Matris yapısında satır (row) ve sütun (column) tanımlanması gündeme gelmektedir. m içeriği boş bir matris olmak üzere; m &lt;- matrix(nrow = 2, ncol = 3) m ## [,1] [,2] [,3] ## [1,] NA NA NA ## [2,] NA NA NA Matris boyutu dim() komutu ile sorgulanır. dim(m) ## [1] 2 3 Matris yapısında gözlemler sütun şeklinde sıralanır. m &lt;- matrix(1:6, nrow = 2, ncol = 3) m ## [,1] [,2] [,3] ## [1,] 1 3 5 ## [2,] 2 4 6 Vektörler parçalanarak da matris yapısı oluşturabilirler. m &lt;- 1:10 ;m ## [1] 1 2 3 4 5 6 7 8 9 10 dim(m) &lt;- c(2, 5) ;m ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 3 5 7 9 ## [2,] 2 4 6 8 10 Matrisler, satır veya sütunların birleştirilmesi yoluyla da oluşturulabilir. Satıların bir araya getirilmesi için rbind komutu kullanılırken, sütunların bir araya getirilmesi için cbind komutu kullanılmaktadır. x &lt;- 1:3 y &lt;- 10:12 cbind(x, y) ## x y ## [1,] 1 10 ## [2,] 2 11 ## [3,] 3 12 rbind(x, y) ## [,1] [,2] [,3] ## x 1 2 3 ## y 10 11 12 5.5 Listeler ve Data Frameler (Lists and Data Frames) 5.6 Nümerik Olmayan Değerler (Non-Numeric Values) 5.6.1 Mantık İşlemleri 5.6.2 Karakterler 5.6.3 Faktörler (Factors) 5.7 Eksik Gözlemler (Missing Values) Referans "],["import-export-işlemleri.html", "Bölüm6 Import Export İşlemleri", " Bölüm6 Import Export İşlemleri "],["proje.html", "Bölüm7 Proje", " Bölüm7 Proje "],["dplyr.html", "Bölüm8 DPLYR", " Bölüm8 DPLYR "],["apply-ailesi.html", "Bölüm9 Apply Ailesi", " Bölüm9 Apply Ailesi "],["grafikler.html", "Bölüm10 Grafikler", " Bölüm10 Grafikler "],["döngüler.html", "Bölüm11 Döngüler", " Bölüm11 Döngüler "],["fonksiyonlar.html", "Bölüm12 Fonksiyonlar", " Bölüm12 Fonksiyonlar "],["referans.html", "Bölüm13 Referans", " Bölüm13 Referans "]]
